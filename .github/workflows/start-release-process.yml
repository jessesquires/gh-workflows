# GitHub Actions Virtual Environments
# https://github.com/actions/virtual-environments/

# Begins a new release.
#
# 1. creates a release/* branch
# 2. version bumps main for next release
# 3. creates milestone for next release

name: Start Release Process

on:
  workflow_dispatch:
    inputs:
      version_bump:
        type: choice
        description: Version bump on main for NEXT release
        options:
        - major
        - minor
        - patch
        default: 'minor'
        required: true

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

jobs:
  # version bump requires macos to update the xcconfig file
  main:
    name: Start Release Process
    runs-on: macos-12
    outputs:
      output_release_version: ${{ steps.step_release_version.outputs.release_version }}
      output_next_version: ${{ steps.step_next_version.outputs.next_version }}
    steps:
      - name: git checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: ruby versions
        run: |
          ruby --version
          gem --version

      # https://github.com/ruby/setup-ruby
      - name: ruby setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: set env release version
        # TODO: use your version script here
        run: |
          echo "release_version=$(./scripts/app_version.rb)" >> $GITHUB_ENV
          echo "release_branch=release/$(./scripts/app_version.rb)" >> $GITHUB_ENV

      - name: verify env release variables
        run: |
          echo "Release Version: ${{ env.release_version }}"
          echo "Release Branch: ${{ env.release_branch }}"

      - name: set release version output
        id: step_release_version
        run: echo "::set-output name=release_version::${{ env.release_version }}"

      - name: major version bump
        if: ${{ github.event.inputs.version_bump == 'major' }}
        # TODO: run your script to bump the version
        run: ./scripts/set_app_version.rb

      - name: minor version bump
        if: ${{ github.event.inputs.version_bump == 'minor' }}
        # TODO: run your script to bump the version
        run: ./scripts/set_app_version.rb

      - name: patch version bump
        if: ${{ github.event.inputs.version_bump == 'patch' }}
        # TODO: run your script to bump the version
        run: ./scripts/set_app_version.rb

      - name: set env next version
        # TODO: use your version script here
        run: |
          echo "next_version=$(./scripts/app_version.rb)" >> $GITHUB_ENV

      - name: verify env next version
        run: |
          echo "Next Version: ${{ env.next_version }}"

      - name: set next version output
        id: step_next_version
        run: echo "::set-output name=next_version::${{ env.next_version }}"

      # https://github.com/marketplace/actions/create-pull-request
      - name: create version bump PR
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          base: ${{ github.event.repository.default_branch }}
          commit-message: "[Automated] Version Bump to ${{ env.next_version }}"
          title: "[Automated] Version Bump to ${{ env.next_version }}"
          body: |
            :robot: _Automated Pull Request_ :robot:

            **Version bump `main` to `${{ env.next_version }}`**

            This pull request was initiated by @${{ github.actor }}.
          branch: automated/version-bump-${{ env.next_version }}
          delete-branch: true
          draft: false

      # https://github.com/marketplace/actions/enable-pull-request-automerge
      - name: enable automerge
        if: steps.create-pr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: squash

      - name: create release branch
        run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git status
          git checkout "$DEFAULT_BRANCH"
          git pull
          git status
          git checkout -b "${{ env.release_branch }}"
          git push origin -u "${{ env.release_branch }}"
          git status

  # the milestone action requires linux
  # so this needs to be a separate job
  # we pass this job the app version as an output from the previous job
  milestone-and-checklist:
    needs: [main]
    name: Create Milestone and Checklist
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: verify job outputs
        run: |
          echo "Release: ${{ needs.main.outputs.output_release_version }}"
          echo "Next: ${{ needs.main.outputs.output_next_version }}"

      # https://github.com/marketplace/actions/manage-milestones
      - name: create next milestone
        uses: julb/action-manage-milestone@v1
        with:
          title: ${{ needs.main.outputs.output_next_version }}
          state: open
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # https://github.com/marketplace/actions/manage-milestones
      - name: get release milestone
        id: milestone
        uses: julb/action-manage-milestone@v1
        with:
          title: ${{ needs.main.outputs.output_release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # https://github.com/marketplace/actions/create-an-issue
      - name: open release checklist
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/release_checklist.md
          milestone: ${{ steps.milestone.outputs.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          VERSION: ${{ needs.main.outputs.output_release_version }}
